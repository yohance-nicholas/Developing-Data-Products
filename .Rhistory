hcaes(x = date, y = value, group =cases)) %>%
hc_title(text = "Breakdown of Confirmed Cases Across CARICOM Member States")
hc_area
ggplot_area <- caricom_tidycovid19_cases %>%
filter(iso3c == "HTI") %>%
ggplot(aes(x = date, y = value, fill = cases)) +
labs(title = "Breakdown of Confirmed Cases",
x = "Date",
y = "Total Cases") +
geom_area()
ggplot_area
ggplot_area <- caricom_tidycovid19_cases %>%
filter(iso3c == "ATG") %>%
ggplot(aes(x = date, y = value, fill = cases)) +
labs(title = "Breakdown of Confirmed Cases",
x = "Date",
y = "Total Cases") +
geom_area()
ggplot_area
library(plotly)
ggplotly(ggplot_area)
hc_area <- caricom_totals_ts %>%
select(-total_confirmed) %>%
gather(cases, value, total_deaths, total_recovered, total_active) %>%
hchart("area",
hcaes(x = date, y = value, group =cases)) %>%
hc_title(text = "Breakdown of Confirmed Cases Across CARICOM Member States")
hc_area
hc_area <- caricom_totals_ts %>%
select(-total_confirmed) %>%
gather(cases, value, total_deaths, total_recovered, total_active) %>%
hchart("area",
hcaes(x = date, y = value, group =cases)) %>%
hc_title(text = "Breakdown of Confirmed Cases Across CARICOM Member States") %>%
hc_plotOptions(area = list(
stacking = "percent",
lineColor = "#ffffff",
lineWidth = 1,
marker = list(
lineWidth = 1,
lineColor = "#ffffff"
))
)
hc_area
hc_area <- caricom_totals_ts %>%
select(-total_confirmed) %>%
gather(cases, value, total_deaths, total_recovered, total_active) %>%
hchart("area",
hcaes(x = date, y = value, group =cases)) %>%
hc_title(text = "Breakdown of Confirmed Cases Across CARICOM Member States") %>%
hc_plotOptions(area = list(
stacking = "normal",
lineColor = "#ffffff",
lineWidth = 1,
marker = list(
lineWidth = 1,
lineColor = "#ffffff"
))
)
hc_area
hc_area <- caricom_totals_ts %>%
select(-total_confirmed) %>%
gather(cases, value, total_deaths, total_recovered, total_active) %>%
hchart("area",
hcaes(x = date, y = value, group =cases)) %>%
hc_title(text = "Breakdown of Confirmed Cases Across CARICOM Member States") %>%
hc_plotOptions(area = list(
stacking = "normal",
lineColor = "#ffffff",
lineWidth = 1,
marker = list(
lineWidth = 1,
lineColor = "#ffffff"
))
) %>% hc_add_theme(hc_theme_ft())
hc_area
hc_area <- caricom_totals_ts %>%
select(-total_confirmed) %>%
gather(cases, value, total_deaths, total_recovered, total_active) %>%
hchart("area",
hcaes(x = date, y = value, group =cases)) %>%
hc_title(text = "Breakdown of Confirmed Cases Across CARICOM Member States") %>%
hc_plotOptions(area = list(
stacking = "normal",
lineColor = "#ffffff",
lineWidth = 1,
marker = list(
lineWidth = 1,
lineColor = "#ffffff"
))
) %>% hc_add_theme(hc_theme_smpl())
hc_area
hc_area <- caricom_totals_ts %>%
select(-total_confirmed) %>%
gather(cases, value, total_deaths, total_recovered, total_active) %>%
hchart("area",
hcaes(x = date, y = value, group =cases)) %>%
hc_title(text = "Breakdown of Confirmed Cases Across CARICOM Member States") %>%
hc_plotOptions(area = list(
stacking = "normal",
lineColor = "#ffffff",
lineWidth = 1,
marker = list(
lineWidth = 1,
lineColor = "#ffffff"
))
) %>% hc_add_theme(hc_theme_elementary())
hc_area
hc_area <- caricom_totals_ts %>%
select(-total_confirmed) %>%
gather(cases, value, total_deaths, total_recovered, total_active) %>%
hchart("area",
hcaes(x = date, y = value, group =cases)) %>%
hc_title(text = "Breakdown of Confirmed Cases Across CARICOM Member States") %>%
hc_plotOptions(area = list(
stacking = "normal",
lineColor = "#ffffff",
lineWidth = 1,
marker = list(
lineWidth = 1,
lineColor = "#ffffff"
))
) %>% hc_add_theme(hc_theme_google())
hc_area
hc_add_theme(hc_theme_smpl())
hc_add_theme(hc_theme_smpl())
hc_area <- caricom_totals_ts %>%
select(-total_confirmed) %>%
gather(cases, value, total_deaths, total_recovered, total_active) %>%
hchart("area",
hcaes(x = date, y = value, group =cases)) %>%
hc_title(text = "Breakdown of Confirmed Cases Across CARICOM Member States") %>%
hc_plotOptions(area = list(
stacking = "normal",
lineColor = "#ffffff",
lineWidth = 1,
marker = list(
lineWidth = 1,
lineColor = "#ffffff"
))
) %>% hc_add_theme(hc_theme_smpl())
hc_area
hc_area <- caricom_totals_ts %>%
select(-total_confirmed) %>%
gather(cases, value, total_deaths, total_recovered, total_active) %>%
hchart("area",
hcaes(x = date, y = value, group =cases)) %>%
hc_title(text = "Breakdown of Confirmed Cases Across CARICOM Member States") %>%
hc_plotOptions(area = list(
stacking = "normal")
) %>% hc_add_theme(hc_theme_smpl())
hc_area
,
lineColor = "#ffffff",
lineWidth = 1,
marker = list(
lineWidth = 1,
lineColor = "#ffffff"
)
hc_area
# test 1 ------------------------------------------------------------------
caricom_totals_ts %>%
select(-total_confirmed) %>%
gather(cases, value, total_deaths, total_recovered, total_active)
hc_area <- caricom_totals_ts %>%
select(-total_confirmed) %>%
gather(cases, value, total_deaths, total_recovered, total_active) %>%
hchart("area",
hcaes(x = date, y = value, group =cases)) %>%
hc_title(text = "Breakdown of Confirmed Cases Across CARICOM Member States") %>%
hc_plotOptions(area = list(
stacking = "normal",
lineColor = "#ffffff",
lineWidth = 1,
marker = list(
lineWidth = 1,
lineColor = "#ffffff"
))
) %>% hc_add_theme(hc_theme_smpl())
hc_area
ggplot_area <- caricom_tidycovid19_cases %>%
filter(iso3c == "ATG") %>%
ggplot(aes(x = date, y = value, fill = cases)) +
labs(title = "Breakdown of Confirmed Cases",
x = "Date",
y = "Total Cases") +
geom_area()
ggplot_area
library(plotly)
ggplotly(ggplot_area)
source('~/GitHub/Developing-Data-Products/0. Data Cleaning Scripts/0_tidycovid19_caricom_local.R', echo=TRUE)
source('~/GitHub/Developing-Data-Products/0. Data Cleaning Scripts/0_tidycovid19_caricom_local.R', echo=TRUE)
View(by_caricom)
source('~/GitHub/Developing-Data-Products/0. Data Cleaning Scripts/0_tidycovid19_caricom_local.R', echo=TRUE)
source('~/GitHub/Developing-Data-Products/0_refresh_repo.R')
source('~/GitHub/Developing-Data-Products/0_refresh_repo.R')
source('~/GitHub/Developing-Data-Products/0_refresh_repo.R')
source('~/GitHub/Developing-Data-Products/0_refresh_repo.R')
source('~/GitHub/Developing-Data-Products/0_refresh_repo.R')
install.packages(c("backports", "fable", "fabletools", "feasts", "ggplot2", "glmnet", "htmltools", "labelled", "rmarkdown", "V8"))
source('~/GitHub/Developing-Data-Products/0_refresh_repo.R')
rlang::last_error()
# CARICOM Covid Data Cleaning Script For Loca Data Refresh
# Prepared by Yohance Nicholas
# Version: May 28th 2020
setwd("~/GitHub/Developing-Data-Products")
library(tidyverse)
library(tsibble)
library(tidyr)
library(sjmisc)
library(zoo) # for rollmean()
# Create ISO3C Variables --------------------------------------------------
commodity <- c("GUY", "JAM", "TTO") # To create variable which identifies type of economy
oecs <- c("ATG", "DMA", "GRD", "KNA", "LCA", "VCT") # To create variable which identifies OECS Member States
caricom <- c("ATG","BHS","BLZ","BRB","DMA","GRD","GUY","HTI","JAM","KNA","LCA","SUR","TTO","VCT") # To create variable which identifies CARICOM Member States
# Import COVID-19 Data ----------------------------------------------------
tidycovid19 <- readRDS(gzcon(url("https://git.io/JfYa7"))) %>%
drop_na(confirmed)
tidycovid19_cases <- tidycovid19 %>%
select(iso3c,
country,
date,
confirmed,
deaths,
recovered) %>%
mutate(active = confirmed - deaths - recovered) %>%
select(-confirmed) %>%
gather(cases, value, deaths, recovered, active)
# Add Spatial Coordinates
library(wbstats)
series <- c("ST.INT.ARVL","SP.POP.0014.TO.ZS", "SP.POP.1564.TO.ZS", "SP.POP.65UP.TO.ZS", "SH.STA.DIAB.ZS", "SH.DTH.NCOM.ZS", "SH.DYN.NCOM.ZS")
wb_data <- wb(indicator = series,
mrv = 1) %>%
select(iso3c, value, indicatorID) %>%
spread(indicatorID, value) %>%
rename(tourist_arrivals = ST.INT.ARVL,
pop_0_14_2018 = SP.POP.0014.TO.ZS,
pop_15_64_2018 = SP.POP.1564.TO.ZS,
pop_65_over_2018 = SP.POP.65UP.TO.ZS,
diabetes_20_79 = SH.STA.DIAB.ZS,
death_by_ncd = SH.DTH.NCOM.ZS,
death_by_cvd_ca_dm_30_70 = SH.DYN.NCOM.ZS)
source('~/GitHub/Developing-Data-Products/0_refresh_repo.R')
source('~/GitHub/Developing-Data-Products/0_refresh_repo.R')
source('~/GitHub/Developing-Data-Products/0_refresh_repo.R')
source('~/GitHub/Developing-Data-Products/0_refresh_repo.R')
source('~/GitHub/Developing-Data-Products/0_refresh_repo.R')
source('~/GitHub/Developing-Data-Products/0_refresh_repo.R')
install.packages(c("htmltools", "knitr", "psd", "RcppGSL", "tsibble", "xfun"))
source('~/GitHub/Developing-Data-Products/0_refresh_repo.R')
source('~/GitHub/Developing-Data-Products/0_refresh_repo.R')
source('~/GitHub/Developing-Data-Products/0_refresh_repo.R')
source('~/GitHub/Developing-Data-Products/0_refresh_repo.R')
source('~/GitHub/Developing-Data-Products/0_refresh_repo.R')
source('~/GitHub/Developing-Data-Products/0_refresh_repo.R')
source('~/GitHub/Developing-Data-Products/0_refresh_repo.R')
source('~/GitHub/Developing-Data-Products/0_refresh_repo.R')
install.packages(c("anytime", "data.table", "expss", "highcharter", "psych", "rstan", "rvest", "tidypredict", "tinytex", "tsibble", "wbstats", "xfun", "XML"))
source('~/GitHub/Developing-Data-Products/0_refresh_repo.R')
source('~/GitHub/Developing-Data-Products/0_refresh_repo.R')
source('~/GitHub/Developing-Data-Products/0_refresh_repo.R')
source('~/GitHub/Developing-Data-Products/0_refresh_repo.R')
source('~/GitHub/Developing-Data-Products/0_refresh_repo.R')
source('~/GitHub/Developing-Data-Products/0_refresh_repo.R')
View(by_oecs)
source('~/GitHub/Developing-Data-Products/0_refresh_repo.R')
knitr::opts_chunk$set(echo = TRUE)
wb_data <- wb_data(indicator = series,
mrv = 1) %>%
select(iso3c, value, indicatorID) %>%
spread(indicatorID, value) %>%
rename(gdp_capita_2018 = NY.GDP.PCAP.KD,
pop_2018 = SP.POP.TOTL,
pop_0_14_2018 = SP.POP.0014.TO.ZS,
pop_15_64_2018 = SP.POP.1564.TO.ZS,
pop_65_over_2018 = SP.POP.65UP.TO.ZS)
series <- c("NY.GDP.PCAP.KD", "SP.POP.TOTL", "SP.POP.0014.TO.ZS", "SP.POP.1564.TO.ZS", "SP.POP.65UP.TO.ZS")
wb_data <- wb_data(indicator = series,
mrv = 1) %>%
select(iso3c, value, indicatorID) %>%
spread(indicatorID, value) %>%
rename(gdp_capita_2018 = NY.GDP.PCAP.KD,
pop_2018 = SP.POP.TOTL,
pop_0_14_2018 = SP.POP.0014.TO.ZS,
pop_15_64_2018 = SP.POP.1564.TO.ZS,
pop_65_over_2018 = SP.POP.65UP.TO.ZS)
# Render Presentations
library(rmarkdown)
rmarkdown::render("1_R_Markdown_and_Leaflet.Rmd")
rmarkdown::render("2_R_Markdown_Presentation.Rmd")
rmarkdown::render("3_Shiny_Application_and_Reproducible_Pitch.Rmd")
source('~/GitHub/Developing-Data-Products/0_refresh_repo.R')
knitr::opts_chunk$set(echo = TRUE)
# Import Relevant Socio-Economic Data from the World Development Indicators Database
library(wbstats)
series <- c("ST.INT.ARVL","SP.POP.0014.TO.ZS", "SP.POP.1564.TO.ZS", "SP.POP.65UP.TO.ZS", "SH.STA.DIAB.ZS", "SH.DTH.NCOM.ZS", "SH.DYN.NCOM.ZS")
wb_data <- wb(indicator = series,
mrv = 1) %>%
select(iso3c, value, indicatorID) %>%
spread(indicatorID, value) %>%
rename(tourist_arrivals = ST.INT.ARVL,
pop_0_14_2018 = SP.POP.0014.TO.ZS,
pop_15_64_2018 = SP.POP.1564.TO.ZS,
pop_65_over_2018 = SP.POP.65UP.TO.ZS,
diabetes_20_79 = SH.STA.DIAB.ZS,
death_by_ncd = SH.DTH.NCOM.ZS,
death_by_cvd_ca_dm_30_70 = SH.DYN.NCOM.ZS)
# Merge COVID-19 Confirmed Cases, World Bank Data and Filter CARICOM Countries
caricom_covid <- covid_19_confirmed_and_deaths %>%
filter(country == "Antigua and Barbuda"|
country == "Bahamas"|
country == "Barbados"|
country == "Belize" |
country == "Dominica"|
country == "Grenada"|
country == "Guyana"|
country == "Haiti"|
country == "Jamaica"|
country == "Montserrat"|
country == "Saint Kitts and Nevis"|
country == "Saint Lucia"|
country == "Saint Vincent and the Grenadines"|
country == "Suriname"|
country == "Trinidad and Tobago") %>%
left_join(wb_data,
by = 'iso3c') %>%
mutate(lat = if_else(country == "Belize", 17.1899, lat),
lng = if_else(country == "Belize", -88.4976, lng),
confirmed_per_100k = confirmed/pop_2018*100000,
deaths_per_100k = deaths/pop_2018*100000,
mortality_rate = deaths/confirmed*100) %>%
unite(popup,
c("country","confirmed"),
sep = ",",
remove = FALSE) %>%
select(-popup,popup)
# Import Relevant Socio-Economic Data from the World Development Indicators Database
library(wbstats)
series <- c("NY.GDP.PCAP.KD", "SP.POP.TOTL", "SP.POP.0014.TO.ZS", "SP.POP.1564.TO.ZS", "SP.POP.65UP.TO.ZS", "SH.STA.DIAB.ZS", "SH.DTH.NCOM.ZS", "SH.DYN.NCOM.ZS")
wb_data <- wb(indicator = series,
mrv = 1) %>%
select(iso3c, value, indicatorID) %>%
spread(indicatorID, value) %>%
rename(gdp_capita_2018 = NY.GDP.PCAP.KD,
pop_2018 = SP.POP.TOTL,
pop_0_14_2018 = SP.POP.0014.TO.ZS,
pop_15_64_2018 = SP.POP.1564.TO.ZS,
pop_65_over_2018 = SP.POP.65UP.TO.ZS,
diabetes_20_79 = SH.STA.DIAB.ZS,
death_by_ncd = SH.DTH.NCOM.ZS,
death_by_cvd_ca_dm_30_70 = SH.DYN.NCOM.ZS))
# Import Relevant Socio-Economic Data from the World Development Indicators Database
library(wbstats)
series <- c("NY.GDP.PCAP.KD", "SP.POP.TOTL", "SP.POP.0014.TO.ZS", "SP.POP.1564.TO.ZS", "SP.POP.65UP.TO.ZS", "SH.STA.DIAB.ZS", "SH.DTH.NCOM.ZS", "SH.DYN.NCOM.ZS")
wb_data <- wb(indicator = series,
mrv = 1) %>%
select(iso3c, value, indicatorID) %>%
spread(indicatorID, value) %>%
rename(gdp_capita_2018 = NY.GDP.PCAP.KD,
pop_2018 = SP.POP.TOTL,
pop_0_14_2018 = SP.POP.0014.TO.ZS,
pop_15_64_2018 = SP.POP.1564.TO.ZS,
pop_65_over_2018 = SP.POP.65UP.TO.ZS,
diabetes_20_79 = SH.STA.DIAB.ZS,
death_by_ncd = SH.DTH.NCOM.ZS,
death_by_cvd_ca_dm_30_70 = SH.DYN.NCOM.ZS)
# Merge COVID-19 Confirmed Cases, World Bank Data and Filter CARICOM Countries
caricom_covid <- covid_19_confirmed_and_deaths %>%
filter(country == "Antigua and Barbuda"|
country == "Bahamas"|
country == "Barbados"|
country == "Belize" |
country == "Dominica"|
country == "Grenada"|
country == "Guyana"|
country == "Haiti"|
country == "Jamaica"|
country == "Montserrat"|
country == "Saint Kitts and Nevis"|
country == "Saint Lucia"|
country == "Saint Vincent and the Grenadines"|
country == "Suriname"|
country == "Trinidad and Tobago") %>%
left_join(wb_data,
by = 'iso3c') %>%
mutate(lat = if_else(country == "Belize", 17.1899, lat),
lng = if_else(country == "Belize", -88.4976, lng),
confirmed_per_100k = confirmed/pop_2018*100000,
deaths_per_100k = deaths/pop_2018*100000,
mortality_rate = deaths/confirmed*100) %>%
unite(popup,
c("country","confirmed"),
sep = ",",
remove = FALSE) %>%
select(-popup,popup)
# write.csv(caricom_covid, sprintf("caricom_covid_data_%s.csv", Sys.Date()))
caricom_table <- caricom_covid %>%
select(country,
confirmed_per_100k,
deaths_per_100k,
gdp_capita_2018) %>%
arrange(country)
library(broom)
library(knitr)
kable(caricom_table,
caption = "Table 1: Confirmed COVID-19 Cases and Deaths per 100,000 by CARICOM Memember State as at June 3rd 2020")
View(caricom_covid)
View(caricom_covid)
source("https://git.io/Jfqjv", local = T)
library(leaflet)
library(leaflet.extras)
caricom_covid_map <- leaflet() %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addMarkers(lat = caricom_today$lat,
lng = caricom_today$lng,
popupOptions = markerClusterOptions,
popup = paste("<b>", caricom_today$country, "</b> <br>",
"Date: ", caricom_today$date, "<br>",
"Confirmed Cases: ", caricom_today$confirmed, "<br>",
"Deaths:", caricom_today$deaths,"<br>",
"Recovered", caricom_today$recovered,"<br>",
"Income Group:", caricom_today$income, "<br>",
"Population Aged 65+:", caricom_today$pop_65_over_2018,"<br>",
"Diabetes prev. (% pop 20-79):", caricom_today$diabetes_20_79)) %>%
addCircleMarkers(lat = caricom_today$lat,
lng = caricom_today$lng,
weight = 1,
radius = caricom_today$confirmed_per_100k,
color = 'yellow') %>%
addCircleMarkers(lat = caricom_today$lat,
lng = caricom_today$lng,
weight = 1,
radius = caricom_today$deaths_per_100k,
color = 'red') %>%
addLegend("bottomright",
colors= c('red', 'yellow'),
labels= c('Deaths per 100,000', 'Confirmed Cases per 100,000'),
title="Legend")
caricom_covid_map
source("https://git.io/Jfqjv", local = T)
library(leaflet)
library(leaflet.extras)
caricom_covid_map <- leaflet() %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addMarkers(lat = caricom_today$lat,
lng = caricom_today$lng,
popupOptions = markerClusterOptions,
popup = paste("<b>", caricom_today$country, "</b> <br>",
"Date: ", caricom_today$date, "<br>",
"Confirmed Cases: ", caricom_today$confirmed, "<br>",
"Deaths:", caricom_today$deaths,"<br>",
"Recovered", caricom_today$recovered,"<br>",
"Income Group:", caricom_today$income, "<br>",
"Population Aged 65+:", caricom_today$pop_65_over_2018,"<br>",
"Diabetes prev. (% pop 20-79):", caricom_today$diabetes_20_79)) %>%
addCircleMarkers(lat = caricom_today$lat,
lng = caricom_today$lng,
weight = 1,
radius = caricom_today$confirmed_per_100k,
color = 'yellow') %>%
addCircleMarkers(lat = caricom_today$lat,
lng = caricom_today$lng,
weight = 1,
radius = log(caricom_today$deaths_per_100k),
color = 'red') %>%
addLegend("bottomright",
colors= c('red', 'yellow'),
labels= c('Deaths per 100,000', 'Confirmed Cases per 100,000'),
title="Legend")
caricom_covid_map
source("https://git.io/Jfqjv", local = T)
library(leaflet)
library(leaflet.extras)
caricom_covid_map <- leaflet() %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addMarkers(lat = caricom_today$lat,
lng = caricom_today$lng,
popupOptions = markerClusterOptions,
popup = paste("<b>", caricom_today$country, "</b> <br>",
"Date: ", caricom_today$date, "<br>",
"Confirmed Cases: ", caricom_today$confirmed, "<br>",
"Deaths:", caricom_today$deaths,"<br>",
"Recovered", caricom_today$recovered,"<br>",
"Income Group:", caricom_today$income, "<br>",
"Population Aged 65+:", caricom_today$pop_65_over_2018,"<br>",
"Diabetes prev. (% pop 20-79):", caricom_today$diabetes_20_79)) %>%
addCircleMarkers(lat = caricom_today$lat,
lng = caricom_today$lng,
weight = 1,
radius = log(caricom_today$confirmed_per_100k)*8,
color = 'yellow') %>%
addCircleMarkers(lat = caricom_today$lat,
lng = caricom_today$lng,
weight = 1,
radius = caricom_today$deaths_per_100k,
color = 'red') %>%
addLegend("bottomright",
colors= c('red', 'yellow'),
labels= c('Deaths per 100,000', 'Confirmed Cases per 100,000'),
title="Legend")
caricom_covid_map
shiny::runApp('3. Shiny Application')
runApp('3. Shiny Application')
runApp('3. Shiny Application')
runApp('3. Shiny Application')
View(world_covid_regression_data)
runApp('3. Shiny Application')
source('~/GitHub/Developing-Data-Products/0. Data Cleaning Scripts/0_tidycovid19_caricom_all.R')
source('~/GitHub/Developing-Data-Products/0. Data Cleaning Scripts/0_tidycovid19_caricom_all.R')
source('~/GitHub/Developing-Data-Products/0. Data Cleaning Scripts/0_tidycovid19_caricom_all.R')
rlang::last_error()
source('~/GitHub/Developing-Data-Products/0_refresh_repo.R')
